name: build-only

on:
  pull_request:
    branches:
      - "main"
    types: [opened, edited, review_requested]
  workflow_dispatch:
  
env:
  GKE_CLUSTER: hubba-cluster     # Add your cluster name here.
  GKE_ZONE: us-central1          # Add your cluster zone here.
  TIMESTAMP: latest

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      TIMESTAMP: ${{ steps.set-time.outputs.TIMESTAMP }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Current Date as Env Variable
        run: echo "TIMESTAMP=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - id: set-time
        name: Set Output Timestamp
        run: echo "TIMESTAMP=${{ env.TIMESTAMP }}" >> "$GITHUB_OUTPUT"

      - name: Pass Timestamp to Deploy Stage
        id: pass-ts
        run: |
          echo "::set-output name=TIMESTAMP::$TIMESTAMP"

  build-webservice:
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: |
          npm install
          npm run lint
          npm run build
        working-directory: web-service

      - name: Build web-service
        uses: docker/build-push-action@v5
        with:
          context: web-service
          platforms: linux/amd64
          push: false

  build-userservice:
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build user-service
        uses: docker/build-push-action@v5
        with:
          build-args: |
            DB_USER=${{ secrets.DB_USER }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME="user-db"
            DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            PROJECT_ID=${{ secrets.PROJECT_ID }}
            USER_EVENT_SUBSCRIPTION_ID=${{ secrets.USER_EVENT_SUBSCRIPTION_ID }}
            EVENTS_EVENT_SUBSCRIPTION_ID=${{ secrets.EVENTS_EVENT_SUBSCRIPTION_ID }}
            USER_EVENT_TOPIC_ID=${{ secrets.USER_EVENT_TOPIC_ID }}
            EVENTS_EVENT_TOPIC_ID=${{ secrets.EVENTS_EVENT_TOPIC_ID }}
            ORGANIZATIONS_EVENT_TOPIC_ID=${{ secrets.ORGANIZATIONS_EVENT_TOPIC_ID }}
            SERVICE_ACCOUNT=${{ secrets.SERVICE_ACCOUNT }}
            VERSION=${{needs.setup.outputs.TIMESTAMP}}
          context: user-service
          platforms: linux/amd64
          push: false

  build-eventsservice:
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build events-service
        uses: docker/build-push-action@v5
        with:
          build-args: |
            DB_USER=${{ secrets.DB_USER }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME="events-db"
            DB_HOSTNAME=${{ secrets.DB_HOSTNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            PROJECT_ID=${{ secrets.PROJECT_ID }}
            USER_EVENT_SUBSCRIPTION_ID=${{ secrets.USER_EVENT_SUBSCRIPTION_ID }}
            EVENTS_EVENT_SUBSCRIPTION_ID=${{ secrets.EVENTS_EVENT_SUBSCRIPTION_ID }}
            USER_EVENT_TOPIC_ID=${{ secrets.USER_EVENT_TOPIC_ID }}
            EVENTS_EVENT_TOPIC_ID=${{ secrets.EVENTS_EVENT_TOPIC_ID }}
            ORGANIZATIONS_EVENT_TOPIC_ID=${{ secrets.ORGANIZATIONS_EVENT_TOPIC_ID }}
            SERVICE_ACCOUNT=${{ secrets.SERVICE_ACCOUNT }}
            VERSION=${{needs.setup.outputs.TIMESTAMP}}
          context: events-service
          platforms: linux/amd64
          push: false
